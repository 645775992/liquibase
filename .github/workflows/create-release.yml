name: Attach Artifacts To Draft Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (example: 4.8.2)'
        required: true
      branch:
        description: 'Branch to release (Defaults to master)'
        required: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.collect-data.outputs.version }}
      branch: ${{ steps.collect-data.outputs.branch }}
    steps:
      - name: Collect Data
        id: collect-data
        uses: actions/github-script@v6
        with:
          script: |
            core.setOutput("version", context.payload.inputs.version);
            core.setOutput("branch", context.payload.inputs.branch || "master");

      - run: |
          echo "Creating version ${{ steps.collect-data.outputs.version }} from ${{ steps.collect-data.outputs.branch }}"

  reversion:
    needs: [ setup ]
    name: Re-version artifacts ${{ needs.setup.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: GPG_PASSPHRASE
        env:
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}

      - name: Download artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          mvn -B -N liquibase-sdk:download-snapshot-artifacts \
            -Dliquibase.sdk.repo=liquibase \
            -Dliquibase.sdk.branchSearch=${{ needs.setup.outputs.branch }} \
            -Dliquibase.sdk.artifactPattern=liquibase-artifacts.zip \
            -Dliquibase.sdk.unzipArtifacts=true \
            -Dliquibase.sdk.downloadDirectory=download 

          mvn  -B -N liquibase-sdk:download-snapshot-artifacts \
            -Dliquibase.sdk.repo=liquibase-pro \
            -Dliquibase.sdk.branchSearch=${{ needs.setup.outputs.branch }} \
            -Dliquibase.sdk.artifactPattern=liquibase-commercial-modules.zip \
            -Dliquibase.sdk.unzipArtifacts=true \
            -Dliquibase.sdk.downloadDirectory=download 
          
          ## replace liquibase-commerical.jar in liquibase-artifacts with correct build
          mv download/liquibase-commercial-modules/liquibase-commercial-0-SNAPSHOT.jar download/liquibase-artifacts 
          rmdir download/liquibase-commercial-modules ##Should be nothing left in here 

      - name: Re-version Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ## Reversion jar files
          mvn -B -N liquibase-sdk:create-release-artifacts \
            -Dliquibase.sdk.repo=liquibase \
            -Dliquibase.sdk.inputDirectory=download/liquibase-artifacts \
            -Dliquibase.sdk.outputDirectory=final/liquibase-artifacts \
            -Dliquibase.sdk.newVersion=${{ needs.setup.outputs.version }}
          
          ## Rebuild tar.gz
          mkdir rebuild
          (cd rebuild && tar xfzv ../download/liquibase-artifacts/liquibase-0-SNAPSHOT.tar.gz)
          cp final/liquibase-artifacts/liquibase-core-${{ needs.setup.outputs.version }}.jar rebuild/internal/lib/liquibase-core.jar
          cp final/liquibase-artifacts/liquibase-commercial-${{ needs.setup.outputs.version }}.jar rebuild/internal/lib/liquibase-commercial.jar
          (cd rebuild && tar czf ../final/liquibase-artifacts/liquibase-${{ needs.setup.outputs.version }}.tar.gz *)
          
          ls -l final/liquibase-artifacts

      - name: Cache Artifacts
        uses: actions/cache@v3.0.8
        with:
          key: liquibase-artifacts-${{ github.run_number }}-${{ github.run_attempt }}
          path: final/liquibase-artifacts

  build-installers:
    needs: [ setup, reversion ]
    name: Build Installers
    runs-on: macos-latest #needs macos for apple notarization
    steps:
      - uses: actions/checkout@v3

      - name: Restore Artifacts
        uses: actions/cache@v3.0.8
        with:
          key: liquibase-artifacts-${{ github.run_number }}-${{ github.run_attempt }}
          path: final/liquibase-artifacts

      - name: Set up JDK for GPG
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: GPG_PASSPHRASE
        env:
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create Installers
        env:
          INSTALL4J_LICENSE: ${{ secrets.INSTALL4J_LICENSE }}
          INSTALL4J_APPLE_KEY: ${{ secrets.INSTALL4J_APPLE_KEY }}
          INSTALL4J_APPLE_KEY_PASSWORD: ${{ secrets.INSTALL4J_APPLE_KEY_PASSWORD }}
          INSTALL4J_APPLE_ID: ${{ secrets.INSTALL4J_APPLE_ID }}
          INSTALL4J_APPLE_ID_PASSWORD: ${{ secrets.INSTALL4J_APPLE_ID_PASSWORD }}
          INSTALL4J_WINDOWS_KEY: ${{ secrets.INSTALL4J_WINDOWS_KEY }}
          INSTALL4J_WINDOWS_KEY_PASSWORD: ${{ secrets.INSTALL4J_WINDOWS_KEY_PASSWORD }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ls -l final/liquibase-artifacts
          
          mkdir -p liquibase-dist/target/keys
          echo "Saving apple key"
          echo "$INSTALL4J_APPLE_KEY" | base64 -d > liquibase-dist/target/keys/datical_apple.p12

          echo "Saving windows key"
          echo "$INSTALL4J_WINDOWS_KEY" | base64 -d > liquibase-dist/target/keys/datical_windows.pfx

          version="${{ needs.setup.outputs.version }}"
          
          ##### Rebuild installers
          tarFile=$(pwd)/final/liquibase-artifacts/liquibase-$version.tar.gz
          scriptDir=$(pwd)/.github/util/
          
          mkdir -p final/installers
          
          mkdir -p liquibase-dist/target/liquibase-$version
          (cd liquibase-dist/target/liquibase-$version && tar xfz $tarFile)
          (cd liquibase-dist && $scriptDir/package-install4j.sh $version)
          mv liquibase-dist/target/liquibase-*-installer-* final/installers

      - name: Cache Installers
        uses: actions/cache@v3.0.8
        with:
          key: liquibase-installers-${{ github.run_number }}-${{ github.run_attempt }}
          path: final/installers

  finish:
    needs: [ build-installers ]
    name: Finish
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for softprops/action-gh-release to create GitHub release
    steps:
      - uses: actions/checkout@v3

      - name: Restore Artifacts
        uses: actions/cache@v3.0.8
        with:
          key: liquibase-artifacts-${{ github.run_number }}-${{ github.run_attempt }}
          path: final/liquibase-artifacts

      - name: Restore Installers
        uses: actions/cache@v3.0.8
        with:
          key: liquibase-installers-${{ github.run_number }}-${{ github.run_attempt }}
          path: final/installers

      - name: Set up JDK for GPG
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: GPG_PASSPHRASE
        env:
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}

      - name: Builds and Sign Final Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ls -l final/liquibase-artifacts
          cp final/installers/* final/liquibase-artifacts

          ls -l final/liquibase-artifacts

          ## Remove the old liquibase-additional
          (cd final/liquibase-artifacts && unzip liquibase-additional*.zip)
          rm final/liquibase-artifacts/liquibase-additional*

          ls -l final/liquibase-artifacts
          
          ## Re-sign and rebuild liquibase-additional
          mvn -B -N liquibase-sdk:create-release-artifacts \
            -Dliquibase.sdk.repo=liquibase \
            -Dliquibase.sdk.inputDirectory=final/liquibase-artifacts \
            -Dliquibase.sdk.outputDirectory=final/liquibase-artifacts \
            -Dliquibase.sdk.newVersion=${{ needs.setup.outputs.version }}

      - name: Attach Files to Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.setup.outputs.version }}
          draft: true
          fail_on_unmatched_files: true
          body: Liquibase ${{ needs.setup.outputs.version }}
          generate_release_notes: true
          files: final/liquibase-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create liquibase-pro release page
        uses: softprops/action-gh-release@v1
        with:
          repository: liquibase/liquibase-pro
          tag_name: v${{ needs.setup.outputs.version }}
          draft: true
          body: Liquibase ${{ needs.setup.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
